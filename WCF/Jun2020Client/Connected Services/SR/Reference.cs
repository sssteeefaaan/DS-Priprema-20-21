//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Jun2020Client.SR {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Kombinacija", Namespace="http://schemas.datacontract.org/2004/07/Jun2020")]
    [System.SerializableAttribute()]
    public partial class Kombinacija : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<int> BrojeviField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<int> Brojevi {
            get {
                return this.BrojeviField;
            }
            set {
                if ((object.ReferenceEquals(this.BrojeviField, value) != true)) {
                    this.BrojeviField = value;
                    this.RaisePropertyChanged("Brojevi");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SR.ILoto", CallbackContract=typeof(Jun2020Client.SR.ILotoCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface ILoto {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoto/NovaKombinacija", ReplyAction="http://tempuri.org/ILoto/NovaKombinacijaResponse")]
        int NovaKombinacija(string nadimak, Jun2020Client.SR.Kombinacija k);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoto/NovaKombinacija", ReplyAction="http://tempuri.org/ILoto/NovaKombinacijaResponse")]
        System.Threading.Tasks.Task<int> NovaKombinacijaAsync(string nadimak, Jun2020Client.SR.Kombinacija k);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoto/UkloniKombinaciju", ReplyAction="http://tempuri.org/ILoto/UkloniKombinacijuResponse")]
        bool UkloniKombinaciju(string nadimak, int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoto/UkloniKombinaciju", ReplyAction="http://tempuri.org/ILoto/UkloniKombinacijuResponse")]
        System.Threading.Tasks.Task<bool> UkloniKombinacijuAsync(string nadimak, int ID);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILoto/IzvuciBroj")]
        void IzvuciBroj(string adminPass, int broj);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILoto/IzvuciBroj")]
        System.Threading.Tasks.Task IzvuciBrojAsync(string adminPass, int broj);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILotoCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILoto/NoviBroj")]
        void NoviBroj(int broj);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILoto/Kraj")]
        void Kraj(int petice, int sestice, int sedmince);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILoto/Cestitka")]
        void Cestitka(string print);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILotoChannel : Jun2020Client.SR.ILoto, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LotoClient : System.ServiceModel.DuplexClientBase<Jun2020Client.SR.ILoto>, Jun2020Client.SR.ILoto {
        
        public LotoClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public LotoClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public LotoClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LotoClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LotoClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public int NovaKombinacija(string nadimak, Jun2020Client.SR.Kombinacija k) {
            return base.Channel.NovaKombinacija(nadimak, k);
        }
        
        public System.Threading.Tasks.Task<int> NovaKombinacijaAsync(string nadimak, Jun2020Client.SR.Kombinacija k) {
            return base.Channel.NovaKombinacijaAsync(nadimak, k);
        }
        
        public bool UkloniKombinaciju(string nadimak, int ID) {
            return base.Channel.UkloniKombinaciju(nadimak, ID);
        }
        
        public System.Threading.Tasks.Task<bool> UkloniKombinacijuAsync(string nadimak, int ID) {
            return base.Channel.UkloniKombinacijuAsync(nadimak, ID);
        }
        
        public void IzvuciBroj(string adminPass, int broj) {
            base.Channel.IzvuciBroj(adminPass, broj);
        }
        
        public System.Threading.Tasks.Task IzvuciBrojAsync(string adminPass, int broj) {
            return base.Channel.IzvuciBrojAsync(adminPass, broj);
        }
    }
}
